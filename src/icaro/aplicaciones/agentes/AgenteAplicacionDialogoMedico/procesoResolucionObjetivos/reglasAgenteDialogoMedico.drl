import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.comunicacion.*
import icaro.aplicaciones.agentes.AgenteAplicacionDialogoMedico.objetivos.*;
import icaro.aplicaciones.informacion.gestionCitas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionDialogoMedico.tareas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionDialogoMedico.tools.*;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

rule "Inicio obtención datos anulacion cita"
 when
    notif:NotificacionMedico(identInterlc:identNotificador, tipoNotificacion == tipoNotifMedico.inicioAnulacion);
    fu:FocoUsuario(usuario == identInterlc, foco == null)
 then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionMedico.obtenerInfoAnulacion);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
    retract(notif);
    
    Objetivo anularCitas = new AnularCitas();
    anularCitas.setobjectReferenceId(identInterlc);
    
    Objetivo idFechaInicio = new IdentificarFechaInicio();
 	idFechaInicio.setobjectReferenceId(identInterlc);
 	insert(idFechaInicio);
 	
 	Objetivo idFechaFin = new IdentificarFechaFin();
 	idFechaFin.setobjectReferenceId(identInterlc);
 	insert(idFechaFin);
    
    fu.setFoco(anularCitas);
 	
end


rule "Obtencion de la fecha inicio sin tener la fecha fin"
 when
    notif:NotificacionMedico(identInterlc:identNotificador, tipoNotificacion == tipoNotifMedico.fechaInicio, msgg:mensajeNotificacion )
    fechaIni:IdentificarFechaInicio(state == Objetivo.PENDING, objectReferenceId == identInterlc)
    obj:AnularCitas(state == Objetivo.PENDING, objectReferenceId == identInterlc)
    fu:FocoUsuario(usuario == identInterlc, foco == obj)
 then
 	fechaIni.setSolved();
 	
 	obj.setFechaInicio(msgg);
 	
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionMedico.obtenerFechaInicioOK);
    tarea.ejecutar(identInterlc,conversacionMedico.obtenerFechaFin);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
    
    Objetivo idFechaFin = new IdentificarFechaFin();
 	idFechaFin.setobjectReferenceId(identInterlc);
 	insert(idFechaFin);
 	
 	update(fechaIni);
    retract(notif);
end

rule "Obtencion de la fecha fin sin tener la fecha inicio"
 when
    notif:NotificacionMedico(identInterlc:identNotificador, tipoNotificacion == tipoNotifMedico.fechaFin, msgg:mensajeNotificacion )
    fechaFin:IdentificarFechaFin(state == Objetivo.PENDING, objectReferenceId == identInterlc)
    obj:AnularCitas(state == Objetivo.PENDING, objectReferenceId == identInterlc)
    fu:FocoUsuario(usuario == identInterlc, foco == obj)
 then
 	fechaFin.setSolved();
 	
 	obj.setFechaFin(msgg);
 	
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionMedico.obtenerFechaFinOK);
    tarea.ejecutar(identInterlc,conversacionMedico.obtenerFechaInicio);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
    
    Objetivo fechaIni = new IdentificarFechaFin();
 	fechaIni.setobjectReferenceId(identInterlc);
 	insert(fechaIni);
 	
 	update(fechaFin);
    retract(notif);
end

rule "Focalizar anular cita"
 when
    fechaIni:IdentificarFechaInicio(state == Objetivo.SOLVED, identInterlc:objectReferenceId) 
    fechaFin:IdentificarFechaFin(state == Objetivo.SOLVED, objectReferenceId == identInterlc)
    obj:AnularCitas(state == Objetivo.PENDING, objectReferenceId == identInterlc)
 then
    obj.setSolving();
    
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionMedico.validarAnulacionCitas1);
    //tarea.ejecutar(identInterlc,conversacionMedico.validarAnulacionCitas1 + "fechaInicio" + validarAnulacionCitas2 + "fechaFin" + validarAnulacionCitas3);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
 	
 	retract(fechaIni);
 	retract(fechaFin);
 	
 	update(obj);
 	recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end

rule "Validar anulacion de citas"
 when
 	notif:NotificacionMedico(identInterlc:identNotificador, tipoNotificacion == tipoNotifMedico.si, msgg:mensajeNotificacion )
    obj:AnularCitas(state == Objetivo.SOLVING, objectReferenceId == identInterlc)
 then
 	Objetivo validar = new ValidarAnular();
 	validar.setobjectReferenceId(identInterlc);
 	validar.setSolving();
 	insert(validar);

    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end

rule "No validar anulacion de citas"
 when
 	notif:NotificacionMedico(identInterlc:identNotificador, tipoNotificacion == tipoNotifMedico.no, msgg:mensajeNotificacion )
    obj:AnularCitas(state == Objetivo.SOLVING, objectReferenceId == identInterlc)
 then
 	Objetivo validar = new ValidarAnular();
 	validar.setobjectReferenceId(identInterlc);
 	validar.setFailed();
 	insert(validar);

    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end


rule "Anulacion confirmada"
 when
 	anular:AnularCitas(state == Objetivo.SOLVING, identInterlc:objectReferenceId)
    validar:ValidarAnular(state == Objetivo.SOLVING, objectReferenceId == identInterlc)
	fu:FocoUsuario(usuario == identInterlc, foco == anular)
 then
 	TareaSincrona tareadist = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
 	String fechaI = anular.getFechaInicio();
    String fechaF = anular.getFechaFin();
 	String msgToSend = conversacionMedico.anulacionCitasCompleta1 + fechaI + conversacionMedico.anulacionCitasCompleta2 + fechaF + conversacionMedico.anulacionCitasCompleta3;
    tareadist.ejecutar(identInterlc,msgToSend); 	
 	Tarea tareadist2 = gestorTareas.crearTarea(NotificarObjetivo.class);
    tareadist2.ejecutar(identInterlc,null,"RESET"); 
    
    fu.setFoco(null);
    
    // AQUI LLAMAREMOS AL RECURSO DE CANLENDARIO PARA BORRAR LAS FECHAS QUE TOQUEN Y AVISAR A LOS USUARIOS 	
 	update(fu);
 	retract(anular);
 	retract(validar);
	
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end
