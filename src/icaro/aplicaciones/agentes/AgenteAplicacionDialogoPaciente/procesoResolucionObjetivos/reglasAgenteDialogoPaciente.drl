import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.comunicacion.*
import icaro.aplicaciones.agentes.AgenteAplicacionDialogoPaciente.objetivos.*;
import icaro.aplicaciones.informacion.gestionCitas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionDialogoPaciente.tareas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionDialogoPaciente.tools.*;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

rule "Inicio obtención datos cita"
 when
    notif:NotificacionPaciente(identInterlc:identNotificador, tipoNotificacion == tipoNotifPaciente.inicioPeticion);
 then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionPaciente.obtenerInfoCita1dameDatos);
 	Objetivo id = new IdentificarMedico();
 	id.setSolving();
 	id.setobjectReferenceId(identInterlc);
	Tarea tareadist = gestorTareas.crearTarea(NotificarObjetivo.class);
    tareadist.ejecutar(identInterlc,notif); 	
 	insert(id);
 	retract(notif);
 	recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Obtención datos médico cita, antes que la fecha fecha"
 when
    notif:NotificacionPaciente(identInterlc:identNotificador, tipoNotificacion == tipoNotifPaciente.nombre, msgg:mensajeNotificacion )
    not( exists ObtenerFechaCita(state == Objetivo.SOLVED, objectReferenceId == identInterlc)) 
    obj:IdentificarMedico(state == Objetivo.SOLVING, objectReferenceId == identInterlc)
    // cu:UsuarioContexto(usuario == identInterlc)
 then
 	obj.setSolved();
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionPaciente.obtenerInfoCita3medicoRegistrado);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
    Objetivo nobj = new ObtenerFechaCita();
 	nobj.setobjectReferenceId(identInterlc);
 	nobj.setSolving();
 	insert(nobj);
 	update(obj);
    retract(notif);
end

rule "Obtención datos médico cita, teniendo la fecha"
 when
    notif:NotificacionPaciente(identInterlc:identNotificador, tipoNotificacion == tipoNotifPaciente.nombre, msgg:mensajeNotificacion )
    ObtenerFechaCita(state == Objetivo.SOLVED, objectReferenceId == identInterlc) 
    obj:IdentificarMedico(state == Objetivo.SOLVING, objectReferenceId == identInterlc)
    // cu:UsuarioContexto(usuario == identInterlc)
 then
 	obj.setSolved();
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionPaciente.obtenerInfoCita4todoCompletado);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
    retract(notif);
end

rule "Obtención datos fecha cita, antes que el médico"
 when
    notif:NotificacionPaciente(identInterlc:identNotificador, tipoNotificacion == tipoNotifPaciente.fecha, msgg:mensajeNotificacion )
    not( exists IdentificarMedico(state == Objetivo.SOLVED, objectReferenceId == identInterlc))
    obj:ObtenerFechaCita(state == Objetivo.SOLVING, objectReferenceId == identInterlc)
    // cu:UsuarioContexto(usuario == identInterlc)
 then
 	obj.setSolved();
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionPaciente.obtenerInfoCita2fechaRegistrada);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
    Objetivo nobj = new IdentificarMedico();
 	nobj.setobjectReferenceId(identInterlc);
 	nobj.setSolving();
 	insert(nobj);
 	update(obj);
    retract(notif);
end

rule "Obtención datos fecha cita, teniendo el médico"
 when
    notif:NotificacionPaciente(identInterlc:identNotificador, tipoNotificacion == tipoNotifPaciente.fecha, msgg:mensajeNotificacion )
    IdentificarMedico(state == Objetivo.SOLVED, objectReferenceId == identInterlc)
    obj:ObtenerFechaCita(state == Objetivo.SOLVING, objectReferenceId == identInterlc)
    // cu:UsuarioContexto(usuario == identInterlc)
 then
 	obj.setSolved();
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MensajeGenerico.class);
    tarea.ejecutar(identInterlc,conversacionPaciente.obtenerInfoCita4todoCompletado);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
    retract(notif);
end